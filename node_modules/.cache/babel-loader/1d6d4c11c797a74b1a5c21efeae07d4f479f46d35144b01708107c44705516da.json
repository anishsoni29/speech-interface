{"ast":null,"code":"var _jsxFileName = \"/Users/anishsoni/Desktop/speech-interface/src/pages/SpeechInterface.js\",\n  _s = $RefreshSig$();\n// src/pages/SpeechInterface.js\nimport React, { useState, useEffect } from 'react';\nimport { Mic, MicOff, Camera, Volume2 } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { Button } from '@/components/ui/Button';\nimport { Alert, AlertDescription } from '@/components/ui/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechInterface = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en-IN');\n  const [lastCapturedImage, setLastCapturedImage] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  // Check server status on component mount\n  useEffect(() => {\n    checkServerStatus();\n  }, []);\n  const checkServerStatus = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/status');\n      const data = await response.json();\n      setStatus(data.status === 'Server is running' ? 'connected' : 'disconnected');\n    } catch (err) {\n      setStatus('disconnected');\n      setError('Cannot connect to server');\n    }\n  };\n  const handleStartRecording = async () => {\n    setIsRecording(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost:5002/api/recognize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          language: selectedLanguage\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setResponse(data.response);\n        // Simulate receiving a new image (in real app, this would come from backend)\n        setLastCapturedImage(`/api/placeholder/640/480?text=Last+Captured+Image&time=${Date.now()}`);\n      } else {\n        setError(data.error || 'Failed to recognize speech');\n      }\n    } catch (err) {\n      setError('Failed to communicate with server');\n    } finally {\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = () => {\n    setIsRecording(false);\n  };\n  const languages = [{\n    code: 'en-IN',\n    name: 'English'\n  }, {\n    code: 'hi-IN',\n    name: 'हिंदी'\n  }, {\n    code: 'mr-IN',\n    name: 'मराठी'\n  }, {\n    code: 'ta-IN',\n    name: 'தமிழ்'\n  }, {\n    code: 'bn-IN',\n    name: 'বাংলা'\n  }\n  // Add more languages as needed\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-white\",\n        children: /*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center justify-between\",\n            children: [\"Smart Glasses Interface\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `px-3 py-1 rounded-full text-sm ${status === 'connected' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"bg-white\",\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Camera, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), \"Camera Feed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aspect-video bg-gray-200 rounded-lg overflow-hidden\",\n              children: lastCapturedImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: lastCapturedImage,\n                alt: \"Last captured\",\n                className: \"w-full h-full object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-full flex items-center justify-center text-gray-500\",\n                children: \"No image captured\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"bg-white\",\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Volume2, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), \"Voice Controls\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedLanguage,\n              onChange: e => setSelectedLanguage(e.target.value),\n              className: \"w-full p-2 border rounded-lg\",\n              children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: lang.code,\n                children: lang.name\n              }, lang.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: isRecording ? handleStopRecording : handleStartRecording,\n              variant: isRecording ? \"destructive\" : \"default\",\n              className: \"w-full h-16 text-lg\",\n              children: isRecording ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(MicOff, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this), \"Stop Recording\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Mic, {\n                  className: \"w-6 h-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), \"Start Recording\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4 bg-gray-50 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium\",\n                children: \"Response:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2\",\n                children: response\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"destructive\",\n              children: /*#__PURE__*/_jsxDEV(AlertDescription, {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechInterface, \"zvlqwjoQQj1SaFHL1Zh2Olzq3XM=\");\n_c = SpeechInterface;\nexport default SpeechInterface;\nvar _c;\n$RefreshReg$(_c, \"SpeechInterface\");","map":{"version":3,"names":["React","useState","useEffect","Mic","MicOff","Camera","Volume2","Card","CardContent","CardHeader","CardTitle","Button","Alert","AlertDescription","jsxDEV","_jsxDEV","SpeechInterface","_s","isRecording","setIsRecording","response","setResponse","error","setError","selectedLanguage","setSelectedLanguage","lastCapturedImage","setLastCapturedImage","status","setStatus","checkServerStatus","fetch","data","json","err","handleStartRecording","method","headers","body","JSON","stringify","language","ok","Date","now","handleStopRecording","languages","code","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","value","onChange","e","target","map","lang","onClick","variant","_c","$RefreshReg$"],"sources":["/Users/anishsoni/Desktop/speech-interface/src/pages/SpeechInterface.js"],"sourcesContent":["// src/pages/SpeechInterface.js\nimport React, { useState, useEffect } from 'react';\nimport { Mic, MicOff, Camera, Volume2 } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { Button } from '@/components/ui/Button';\nimport { Alert, AlertDescription } from '@/components/ui/Alert';\n\nconst SpeechInterface = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('en-IN');\n  const [lastCapturedImage, setLastCapturedImage] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  // Check server status on component mount\n  useEffect(() => {\n    checkServerStatus();\n  }, []);\n\n  const checkServerStatus = async () => {\n    try {\n      const response = await fetch('http://localhost:5002/api/status');\n      const data = await response.json();\n      setStatus(data.status === 'Server is running' ? 'connected' : 'disconnected');\n    } catch (err) {\n      setStatus('disconnected');\n      setError('Cannot connect to server');\n    }\n  };\n\n  const handleStartRecording = async () => {\n    setIsRecording(true);\n    setError('');\n\n    try {\n      const response = await fetch('http://localhost:5002/api/recognize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          language: selectedLanguage,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setResponse(data.response);\n        // Simulate receiving a new image (in real app, this would come from backend)\n        setLastCapturedImage(`/api/placeholder/640/480?text=Last+Captured+Image&time=${Date.now()}`);\n      } else {\n        setError(data.error || 'Failed to recognize speech');\n      }\n    } catch (err) {\n      setError('Failed to communicate with server');\n    } finally {\n      setIsRecording(false);\n    }\n  };\n\n  const handleStopRecording = () => {\n    setIsRecording(false);\n  };\n\n  const languages = [\n    { code: 'en-IN', name: 'English' },\n    { code: 'hi-IN', name: 'हिंदी' },\n    { code: 'mr-IN', name: 'मराठी' },\n    { code: 'ta-IN', name: 'தமிழ்' },\n    { code: 'bn-IN', name: 'বাংলা' },\n    // Add more languages as needed\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-4xl mx-auto space-y-6\">\n        {/* Status Card */}\n        <Card className=\"bg-white\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              Smart Glasses Interface\n              <span className={`px-3 py-1 rounded-full text-sm ${\n                status === 'connected' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n              }`}>\n                {status}\n              </span>\n            </CardTitle>\n          </CardHeader>\n        </Card>\n\n        {/* Main Interface */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Camera Feed */}\n          <Card className=\"bg-white\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Camera className=\"w-5 h-5\" />\n                Camera Feed\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"aspect-video bg-gray-200 rounded-lg overflow-hidden\">\n                {lastCapturedImage ? (\n                  <img \n                    src={lastCapturedImage} \n                    alt=\"Last captured\" \n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <div className=\"w-full h-full flex items-center justify-center text-gray-500\">\n                    No image captured\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Controls & Response */}\n          <Card className=\"bg-white\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Volume2 className=\"w-5 h-5\" />\n                Voice Controls\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {/* Language Selection */}\n              <select\n                value={selectedLanguage}\n                onChange={(e) => setSelectedLanguage(e.target.value)}\n                className=\"w-full p-2 border rounded-lg\"\n              >\n                {languages.map((lang) => (\n                  <option key={lang.code} value={lang.code}>\n                    {lang.name}\n                  </option>\n                ))}\n              </select>\n\n              {/* Record Button */}\n              <Button\n                onClick={isRecording ? handleStopRecording : handleStartRecording}\n                variant={isRecording ? \"destructive\" : \"default\"}\n                className=\"w-full h-16 text-lg\"\n              >\n                {isRecording ? (\n                  <div className=\"flex items-center gap-2\">\n                    <MicOff className=\"w-6 h-6\" />\n                    Stop Recording\n                  </div>\n                ) : (\n                  <div className=\"flex items-center gap-2\">\n                    <Mic className=\"w-6 h-6\" />\n                    Start Recording\n                  </div>\n                )}\n              </Button>\n\n              {/* Response Display */}\n              {response && (\n                <div className=\"p-4 bg-gray-50 rounded-lg\">\n                  <p className=\"font-medium\">Response:</p>\n                  <p className=\"mt-2\">{response}</p>\n                </div>\n              )}\n\n              {/* Error Display */}\n              {error && (\n                <Alert variant=\"destructive\">\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeechInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
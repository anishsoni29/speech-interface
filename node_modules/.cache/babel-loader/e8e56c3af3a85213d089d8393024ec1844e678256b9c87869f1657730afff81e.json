{"ast":null,"code":"var _jsxFileName = \"/Users/anishsoni/Desktop/insight-ai/speech-interface/src/components/ui/imageGallery.jsx\",\n  _s = $RefreshSig$();\n// ImageGallery.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent } from './Card'; // Assuming these are styled components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = ({\n  images,\n  response,\n  language,\n  setLanguage\n}) => {\n  _s();\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(language);\n  const speakResponse = text => {\n    const speechSynthesis = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = selectedLanguage;\n    utterance.onstart = () => setIsSpeaking(true);\n    utterance.onend = () => setIsSpeaking(false);\n    speechSynthesis.speak(utterance);\n  };\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech Recognition API is not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = selectedLanguage;\n    recognition.onstart = () => setIsListening(true);\n    recognition.onend = () => setIsListening(false);\n    recognition.onresult = event => {\n      const text = event.results[0][0].transcript;\n      setTranscript(text);\n      handleLanguageSelection(text);\n    };\n    recognition.start();\n  };\n  const handleLanguageSelection = text => {\n    if (text.includes('English')) {\n      setLanguage('en-US');\n      setSelectedLanguage('en-US');\n    } else if (text.includes('Hindi')) {\n      setLanguage('hi-IN');\n      setSelectedLanguage('hi-IN');\n    }\n  };\n  useEffect(() => {\n    if (response) {\n      speakResponse(response);\n    }\n    if (!images || images.length === 0) {\n      fetchImages();\n    }\n  }, [response, images]);\n  const fetchImages = async () => {\n    try {\n      const res = await fetch('/api/images');\n      const data = await res.json();\n      if (data.images) {\n        images = data.images;\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch images:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 px-4 sm:px-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center\",\n      children: \"Recent Captures\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selected Language: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), selectedLanguage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\",\n      children: images && images.length > 0 ? images.map((image, index) => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/api/image/${image.filename}`,\n          alt: `Image captured at ${image.timestamp}`,\n          className: \"w-full h-40 sm:h-48 object-cover rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Prompt:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 20\n            }, this), \" \", image.prompt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Response:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 20\n            }, this), \" \", image.response]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 20\n            }, this), \" \", image.timestamp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"z2WmgLxj+Cvfz63lxSYY+OIoJiI=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","jsxDEV","_jsxDEV","ImageGallery","images","response","language","setLanguage","_s","isSpeaking","setIsSpeaking","transcript","setTranscript","isListening","setIsListening","selectedLanguage","setSelectedLanguage","speakResponse","text","speechSynthesis","window","utterance","SpeechSynthesisUtterance","lang","onstart","onend","speak","startListening","SpeechRecognition","webkitSpeechRecognition","alert","recognition","onresult","event","results","handleLanguageSelection","start","includes","length","fetchImages","res","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","src","filename","alt","timestamp","prompt","_c","$RefreshReg$"],"sources":["/Users/anishsoni/Desktop/insight-ai/speech-interface/src/components/ui/imageGallery.jsx"],"sourcesContent":["// ImageGallery.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent } from './Card'; // Assuming these are styled components\n\nconst ImageGallery = ({ images, response, language, setLanguage }) => {\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(language);\n\n  const speakResponse = (text) => {\n    const speechSynthesis = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = selectedLanguage;\n    utterance.onstart = () => setIsSpeaking(true);\n    utterance.onend = () => setIsSpeaking(false);\n    speechSynthesis.speak(utterance);\n  };\n\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech Recognition API is not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = selectedLanguage;\n    recognition.onstart = () => setIsListening(true);\n    recognition.onend = () => setIsListening(false);\n    recognition.onresult = (event) => {\n      const text = event.results[0][0].transcript;\n      setTranscript(text);\n      handleLanguageSelection(text);\n    };\n    recognition.start();\n  };\n\n  const handleLanguageSelection = (text) => {\n    if (text.includes('English')) {\n      setLanguage('en-US');\n      setSelectedLanguage('en-US');\n    } else if (text.includes('Hindi')) {\n      setLanguage('hi-IN');\n      setSelectedLanguage('hi-IN');\n    }\n  };\n\n  useEffect(() => {\n    if (response) {\n      speakResponse(response);\n    }\n    if (!images || images.length === 0) {\n      fetchImages();\n    }\n  }, [response, images]);\n\n  const fetchImages = async () => {\n    try {\n      const res = await fetch('/api/images');\n      const data = await res.json();\n      if (data.images) {\n        images = data.images;\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch images:\", error);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6 px-4 sm:px-6\">\n      <h2 className=\"text-2xl font-bold text-center\">Recent Captures</h2>\n      <div className=\"mb-4 text-center\">\n        <strong>Selected Language: </strong>{selectedLanguage}\n      </div>\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\">\n        {images && images.length > 0 ? (\n          images.map((image, index) => (\n            <Card key={index}>\n              <img\n                src={`/api/image/${image.filename}`}\n                alt={`Image captured at ${image.timestamp}`}\n                className=\"w-full h-40 sm:h-48 object-cover rounded-md\"\n              />\n              <CardContent>\n                <p><strong>Prompt:</strong> {image.prompt}</p>\n                <p><strong>Response:</strong> {image.response}</p>\n                <p><strong>Time:</strong> {image.timestamp}</p>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <p>No images available.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageGallery;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAACS,QAAQ,CAAC;EAElE,MAAMW,aAAa,GAAIC,IAAI,IAAK;IAC9B,MAAMC,eAAe,GAAGC,MAAM,CAACD,eAAe;IAC9C,MAAME,SAAS,GAAG,IAAIC,wBAAwB,CAACJ,IAAI,CAAC;IACpDG,SAAS,CAACE,IAAI,GAAGR,gBAAgB;IACjCM,SAAS,CAACG,OAAO,GAAG,MAAMd,aAAa,CAAC,IAAI,CAAC;IAC7CW,SAAS,CAACI,KAAK,GAAG,MAAMf,aAAa,CAAC,KAAK,CAAC;IAC5CS,eAAe,CAACO,KAAK,CAACL,SAAS,CAAC;EAClC,CAAC;EAED,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,iBAAiB,GAAGR,MAAM,CAACQ,iBAAiB,IAAIR,MAAM,CAACS,uBAAuB;IACpF,IAAI,CAACD,iBAAiB,EAAE;MACtBE,KAAK,CAAC,0DAA0D,CAAC;MACjE;IACF;IACA,MAAMC,WAAW,GAAG,IAAIH,iBAAiB,CAAC,CAAC;IAC3CG,WAAW,CAACR,IAAI,GAAGR,gBAAgB;IACnCgB,WAAW,CAACP,OAAO,GAAG,MAAMV,cAAc,CAAC,IAAI,CAAC;IAChDiB,WAAW,CAACN,KAAK,GAAG,MAAMX,cAAc,CAAC,KAAK,CAAC;IAC/CiB,WAAW,CAACC,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMf,IAAI,GAAGe,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACvB,UAAU;MAC3CC,aAAa,CAACM,IAAI,CAAC;MACnBiB,uBAAuB,CAACjB,IAAI,CAAC;IAC/B,CAAC;IACDa,WAAW,CAACK,KAAK,CAAC,CAAC;EACrB,CAAC;EAED,MAAMD,uBAAuB,GAAIjB,IAAI,IAAK;IACxC,IAAIA,IAAI,CAACmB,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC5B9B,WAAW,CAAC,OAAO,CAAC;MACpBS,mBAAmB,CAAC,OAAO,CAAC;IAC9B,CAAC,MAAM,IAAIE,IAAI,CAACmB,QAAQ,CAAC,OAAO,CAAC,EAAE;MACjC9B,WAAW,CAAC,OAAO,CAAC;MACpBS,mBAAmB,CAAC,OAAO,CAAC;IAC9B;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,EAAE;MACZY,aAAa,CAACZ,QAAQ,CAAC;IACzB;IACA,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACkC,MAAM,KAAK,CAAC,EAAE;MAClCC,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAAClC,QAAQ,EAAED,MAAM,CAAC,CAAC;EAEtB,MAAMmC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;MACtC,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACtC,MAAM,EAAE;QACfA,MAAM,GAAGsC,IAAI,CAACtC,MAAM;MACtB;IACF,CAAC,CAAC,OAAOwC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACE1C,OAAA;IAAK4C,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC7C,OAAA;MAAI4C,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnEjD,OAAA;MAAK4C,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B7C,OAAA;QAAA6C,QAAA,EAAQ;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAACpC,gBAAgB;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNjD,OAAA;MAAK4C,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClE3C,MAAM,IAAIA,MAAM,CAACkC,MAAM,GAAG,CAAC,GAC1BlC,MAAM,CAACgD,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACtBpD,OAAA,CAACH,IAAI;QAAAgD,QAAA,gBACH7C,OAAA;UACEqD,GAAG,EAAE,cAAcF,KAAK,CAACG,QAAQ,EAAG;UACpCC,GAAG,EAAE,qBAAqBJ,KAAK,CAACK,SAAS,EAAG;UAC5CZ,SAAS,EAAC;QAA6C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,eACFjD,OAAA,CAACF,WAAW;UAAA+C,QAAA,gBACV7C,OAAA;YAAA6C,QAAA,gBAAG7C,OAAA;cAAA6C,QAAA,EAAQ;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACE,KAAK,CAACM,MAAM;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9CjD,OAAA;YAAA6C,QAAA,gBAAG7C,OAAA;cAAA6C,QAAA,EAAQ;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACE,KAAK,CAAChD,QAAQ;UAAA;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClDjD,OAAA;YAAA6C,QAAA,gBAAG7C,OAAA;cAAA6C,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACE,KAAK,CAACK,SAAS;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA,GAVLG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CACP,CAAC,gBAEFjD,OAAA;QAAA6C,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC3B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA5FIL,YAAY;AAAAyD,EAAA,GAAZzD,YAAY;AA8FlB,eAAeA,YAAY;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
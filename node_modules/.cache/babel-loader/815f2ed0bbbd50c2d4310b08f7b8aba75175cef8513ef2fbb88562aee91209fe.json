{"ast":null,"code":"var _jsxFileName = \"/Users/anishsoni/Desktop/speech-interface/src/components/ui/imageGallery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent } from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = ({\n  images,\n  response\n}) => {\n  _s();\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  // Function to handle speaking and UI updates\n  const speakResponse = text => {\n    const speechSynthesis = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.onstart = () => setIsSpeaking(true); // Trigger speaking animation\n    utterance.onend = () => setIsSpeaking(false); // Stop speaking animation\n    speechSynthesis.speak(utterance);\n  };\n\n  // Trigger speaking when the response is available\n  React.useEffect(() => {\n    if (response) {\n      speakResponse(response);\n    }\n  }, [response]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold\",\n      children: \"Recent Captures\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: images && images.length > 0 ? images.map(image => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"p-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5002/api/image/${image.filename}`,\n            alt: `Captured at ${image.timestamp}`,\n            className: \"w-full h-48 object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500 mb-2\",\n              children: image.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-medium mb-2\",\n              children: [\"Prompt: \", image.prompt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-700\",\n              children: image.response\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `speaking-animation ${isSpeaking ? 'speaking' : ''}`,\n      children: isSpeaking ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83C\\uDFA4 Bot is Speaking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Bot is silent.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"xHOm1rH8C85mxoNN86XvoEU9t2c=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","Card","CardContent","jsxDEV","_jsxDEV","ImageGallery","images","response","_s","isSpeaking","setIsSpeaking","speakResponse","text","speechSynthesis","window","utterance","SpeechSynthesisUtterance","onstart","onend","speak","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","image","src","filename","alt","timestamp","prompt","id","_c","$RefreshReg$"],"sources":["/Users/anishsoni/Desktop/speech-interface/src/components/ui/imageGallery.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent } from './Card';\n\nconst ImageGallery = ({ images, response }) => {\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  // Function to handle speaking and UI updates\n  const speakResponse = (text) => {\n    const speechSynthesis = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.onstart = () => setIsSpeaking(true);  // Trigger speaking animation\n    utterance.onend = () => setIsSpeaking(false);   // Stop speaking animation\n    speechSynthesis.speak(utterance);\n  };\n\n  // Trigger speaking when the response is available\n  React.useEffect(() => {\n    if (response) {\n      speakResponse(response);\n    }\n  }, [response]);\n\n  return (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Recent Captures</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {images && images.length > 0 ? (\n          images.map((image) => (\n            <Card key={image.id} className=\"overflow-hidden\">\n              <CardContent className=\"p-0\">\n                <img\n                  src={`http://localhost:5002/api/image/${image.filename}`}\n                  alt={`Captured at ${image.timestamp}`}\n                  className=\"w-full h-48 object-cover\"\n                />\n                <div className=\"p-4\">\n                  <div className=\"text-sm text-gray-500 mb-2\">\n                    {image.timestamp}\n                  </div>\n                  <p className=\"font-medium mb-2\">Prompt: {image.prompt}</p>\n                  <p className=\"text-sm text-gray-700\">{image.response}</p>\n                </div>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <p>No images available.</p>\n        )}\n      </div>\n\n      {/* Speech Animation */}\n      <div className={`speaking-animation ${isSpeaking ? 'speaking' : ''}`}>\n        {isSpeaking ? <span>ðŸŽ¤ Bot is Speaking...</span> : <span>Bot is silent.</span>}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageGallery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}